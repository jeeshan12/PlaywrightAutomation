name: Update Snapshots

on:
  issue_comment:
    types: [created]

jobs:
  updateSnaphosts:
    name: Update the snapshots
    if: ${{ github.event.issue.pull_request }} && contains(github.event.comment.body , '/update-snapshots')
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - name: Get PR branch
        uses: xt0rted/pull-request-comment-branch@v2
        id: comment-branch

#       - name: Set latest commit status as pending
#         uses: myrotvorets/set-commit-status-action@master
#         with:
#           sha: ${{ steps.comment-branch.outputs.head_sha }}
#           token: ${{ secrets.GITHUB_TOKEN }}
#           status: pending

      - name: Checkout PR branch
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}

      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version: 16
  
      - name: Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').dependencies['@playwright/test'].version)")" >> $GITHUB_ENV

      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
         path: |
          ~/.cache/ms-playwright
         key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - name: Install dependencies
        run: npm ci

      - run: npx playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      - run: npx playwright install-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      - name: Update snapshots
        run: npx playwright test --update-snapshots --grep=/visual/ --reporter=list

#       - name: Add workflow result as comment on PR
#         uses: actions/github-script@v6
#         if: always()
#         with:
#           script: |
#             const name = '${{ github.workflow	}}';
#             const url = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
#             const success = '${{ job.status }}' === 'success';
#             const body = `${name}: ${success ? 'succeeded ✅' : 'failed ❌'}\n${url}`;

#             await github.rest.issues.createComment({
#               issue_number: context.issue.number,
#               owner: context.repo.owner,
#               repo: context.repo.repo,
#               body: body
#             })

#       - name: Set latest commit status as ${{ job.status }}
#         uses: myrotvorets/set-commit-status-action@master
#         if: always()
#         with:
#           sha: ${{ steps.comment-branch.outputs.head_sha }}
#           token: ${{ secrets.GITHUB_TOKEN }}
#           status: ${{ job.status }}
      - name: commit the snapshots 
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Updating the snapshots
          branch: ${{ steps.comment-branch.outputs.head_ref }}
