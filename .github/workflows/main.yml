# name: Playwright Tests
# on:
#   push:
#     branches: [ main, master ]
#   pull_request:
#     branches: [ main, master ]
#   workflow_run:
#      workflows: ["Update Snapshots"]
#      types:
#       - completed
# jobs:
#   test:
#     timeout-minutes: 60
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v3
#     - uses: actions/setup-node@v3
#       with:
#         node-version: 16
#     - name: Get installed Playwright version
#       id: playwright-version
#       run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').dependencies['@playwright/test'].version)")" >> $GITHUB_ENV
#     - name: Cache playwright binaries
#       uses: actions/cache@v3
#       id: playwright-cache
#       with:
#          path: |
#           ~/.cache/ms-playwright
#          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
#     - name: Install dependencies
#       run: npm ci
      
#     - name: Install Playwright Browsers
#       run: npx playwright install --with-deps
#       if: steps.playwright-cache.outputs.cache-hit != 'true'
    
#     - run: npx playwright install-deps
#       if: steps.playwright-cache.outputs.cache-hit != 'true'
      
#     - name: Run Playwright tests
#       run: npx playwright test --project chromium --grep-invert=/visual/
#       id: web
    
#     - uses: actions/upload-artifact@v3
#       if: job.status.web.status == failure() || job.status.web.status == success()
#       with:
#         name: playwright-report-web
#         path: playwright-report/
#         retention-days: 30
      
#     - name: Run Playwright API tests
#       run: npx playwright test --project api
#       if: always()
#       id: api
      
#     - uses: actions/upload-artifact@v3
#       if: job.status.api.status == failure() || job.status.api.status == success()
#       with:
#         name: playwright-report-api
#         path: playwright-report/
#         retention-days: 30
